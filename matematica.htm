<html>
<head>
	<style>
		table, tr, td {
			//border: 1px solid black;
			//border-collapse: collapse;
		}
		td{
			padding-top: 25px;
			padding-bottom: 25px;
			padding-left: 5px;
			padding-right: 5px;
		}
	</style>
</head>




<div id="divStatistici"> </div>
<div id="divLog"> </div>
<div id="div1"> </div>
<div id="div2"> </div>
<div id="div3"> </div>

<!--
<br>
<br>
<br>
<br>
<br>
<br>quiz patrate pt 1-30 si invers
<br>la inmultiri simple controls pt t1 si t2: intrvale de alegere-dropdown list simle sau direcy pt 1-20
<br>in dreptul fiecarui nume de functie sa afiseze nr de qs si pocentajul ptziua curenta
<br>afiseaza qs rasp si variante, cel crecte cu galben, cele gresite cu rosu-daca apesi pe buton sa le vezi sa iti schimbe intrbarea curenta
<br>bara patratele to complete [last ten consecutive]
<br>ordinea operatiilor-variante: cu paranteze vs fara paranteze, e1 =3/4/5 vs e1/e2/e3 = 7
<br>field %corecte / total., lat 10,20 30
<br>buton [back to menu list]
<br>prof/parinte poate: 
-vede ce activitate are elevul: ce quizuri a lucrat si ce scoruri in ce zile
-da teme care sa ii apara elevului si masura in care le-a indeplinitL eg quiz xyz 4zile/sapt min provcentaj nealeator, minim o serie de 10 consecutive sau peste 50 turns peste 70% corecte
<br>elevi opt solicita inscriere la un grup al uni profesor
<br>profesor poate invita elevi
<br>autentificare
<br>fiecare user are un fisier in care se stocheaza datele lui, ac fisier se salveaza pe parcursul sesiunii
<br>24=[x*y] 3*5 3*8 4*8
<br>divizibilitate, factori primi,cmmdc cmmmc
<br>operatii cu puteri
<br>la adunare cu nivelui - param 0aleator/progresie,1-9 un anumit set de parametri
<br>x++*/y=z z=x++*/y aleator/f de param pasat functei: semn, necunoscuta, =z/z= 
<br>ordinea ecuatilor
<br>ad arraray [programaryPerTurn[t] ] -> la turn t sa programeze intrebarea x-fie repetarea intr curente fie o intrebare crelata(de ex a ales 5*7=x36 sa il intrebe 6*?=36 )
<br>add random de array r3([5,7,9])sa leaga una din val
<br>add [array de posibile variante de raspuns inselatoare] eg la -3*-5 
-arg metoda generala: rNR/eNR1-NR2 + - +- +* +*/
<br>identifiers 
<br>	r3 +- r5
<br>random number: 
<br>	r nr 
<br>		r5 0to5 r-5 -5to0
<br>		r+-5 -5to5
<br>	r nr1-nr2 
<br>		r-5-7 -5to7
<br>		r-5--7 -5to+7
<br>		daca nr2 neg atunci rnr1--nr2
<br>	daca sunt valori zecimale sa fie interval cu atatea zecimale cate sunt cele mai multe la unul dintre termenii expresiei	
<br>semne: 
<br>	+ daca e un singur semn e ala
<br>	+- daca sunt mai mlte alege aleator din ele
<br>	
<br>identifiers pt random nr sau random semn precedent:
<br>	n3-identifier pt numere al catelea r de la st la dr
<br>		de ex daca tre sa folosesti val lui pt alt [interval de random] sau pt alta [constanta] 
<br>	s4 - al 4lea semn de la stanga
<br>	s!4 - INVERSUL semnului 4 de la stanga
<br>	
<br>constante:	
<br>	cn3s!2n1
<br>	
<br>marcaj pt necunoscute
<br>	la r si la c si la s (random si constante si semne)
<br>	poti pune inainte un x astfel incat acest semn sa fie variabila de ghicit
<br>	
<br>
<br>cum sa construiasca variantele incorecte de raspuns
<br>	intr-un interval de +-5 de la rasp corect
<br>	
<br>features fezabile 
<br>
<br>features dorite
<br>	intrebari tip cum verifici rez la impartirea 45:7=4r3 [4*7+3=45][3*4+45=3]recombinarid'astea
<br>	sa ii poti preciza si rata de progres
<br>			de ex daca are 80% succes la prevoius 15 repetitii
<br>				atunci sa modifice intervalul pt variabila 1,2, sau 3 ai sa il creasca in sus in jos,limita inf, limita sup
<br>	daca a gersit un q 
<br>		atunci acelasi q reprograma tpeste 2-3 x turns
<br>		sau
<br>		atunci sa ii creeze un q complementar (sau mai multe) ornind de la valori
<br>	sa verificae daca egalitatea/inegalitatea este corecta
<br>	sa afiseze 	pe masura ce scrii
<br>		ddaca sunt greseli in formula
<br>		 intervalele declarate si optinile de semne
<br>	sa poti sa faci aceste formule si tu cu un meniu cu butoane, nu doar text
<br>		si sa iti arate in tim preal 
<br>			cum le interpreteazA
<br>			exemple de cum va arata quurile
-->		

<script language='javascript'>"use strict"
/*



*/





main();
var logRaspunsuri =[];
var loc =[];
var rasp;
var turn=1;
var quizName;


function main(){
	//functionare normala:
		showQuizList();
	//testare
		//testEcuatiiCuONecunoscuta();
}

function testEcuatiiCuONecunoscuta(){
	
	var q1;
	for (var i=0;i<10;i++){
		//afiseaza q si raspuns	
		q1=ecuatiiCuONecunoscuta();
		//console.log(q1.q, "X="+q1.rCorect);
	}


};

function showQuizList(){
	var arr=[
	"ecuatiiCuONecunoscuta",
	"inmultiriPeCatOri7",
	"adunariDeMultipli",
	"impartiriFaraRest",
	"impartiriCuRest",
	"inmultiriSiAdunari",
	"inmultiriDeNegative",
	"inmultiriSimple",
	"adunariSimple",
	"adunariCuTinem1",
	"sumeDeNegative",
	];
	var txt="";
	arr.forEach (m);
	function m(s,i){
		txt+="<br>"+"<span "
			+'onclick="quizName=\''+s+'\'; callNewQ();" '
			+" ><u>"
			+s
			+"</u></span>";
	}
	
	//console.log(txt);
	document.getElementById("div1").innerHTML=txt;

}




function callNewQ(){
	var q1;
	switch(quizName){
		case "ecuatiiCuONecunoscuta":q1=ecuatiiCuONecunoscuta();break;
		case "inmultiriPeCatOri7": 	q1=inmultiriPeCatOri7();break;
		case "adunariDeMultipli": 	q1=adunariDeMultipli();break;
		case "inmultiriSiAdunari": 	q1=inmultiriSiAdunari();break;
		case "adunariCuTinem1": 	q1=adunariCuTinem1();break;
		case "adunariSimple": 		q1=adunariSimple();break;
		case "inmultiriSimple": 	q1=inmultiriSimple();break;
		case "inmultiriDeNegative": q1=inmultiriDeNegative();break;
		case "sumeDeNegative": 		q1=sumeDeNegative();break;
		case "impartiriFaraRest": 	q1=impartiriFaraRest();break;
		case "impartiriCuRest": 	q1=impartiriCuRest();break;
	}

	
	//afiseaza q si versiuni
	document.getElementById("div2").innerHTML=turn+".) "+q1.q;//+"<br><br>";
	var d1,d2;
	if(turn%2==0){
		d1="div1";
		d2="div3";
	}else		{
		d1="div3";
		d2="div1";
	}
	document.getElementById(d1).innerHTML=q1.rh;
	document.getElementById(d2).innerHTML="<table><tr><td>&nbsp;</table>";//tabel gol care sa mentina constanta [distanta de sus la care se afiseaza q ]
	
	afiseazaStatistici();
}

function afiseazaStatistici(){
	//afisare statistici in "divStatistici"
	
	if (logRaspunsuri.length==0)return;
	
	var procentPerToate;
	var procentPer10;
	var len=logRaspunsuri.length;
	var ttot=0,t10=0;
	
	for (var i=len-1;i>=0;i--){
		ttot+=logRaspunsuri[i];
		if(len>=10 && i>len-11){
			t10+=logRaspunsuri[i];
		}
	}
	
	procentPerToate=(ttot/len*100).toFixed(0);
	procentPer10=(t10/10*100).toFixed(0);
	
	var txt="";
	//txt+=logRaspunsuri;
	txt+="<br>Corectitudine raspunsuri<br>Pt. toate: "+procentPerToate+"%";
	if(len>=10){
		txt+="<br> Pt. ultimele zece: "+procentPer10+"%";
	}	
	
	document.getElementById("divStatistici").innerHTML=txt;
}



function ecuatiiCuONecunoscuta(){
	/*
	t1 +-* / t2 = t3
	variatii 
		semn= /+-*
		care va fi necunoscuta t1/t2
		t3 in st sau dr lui =: ...=t3 sau t3=...
	*/
	var semn;
	// semn=ra(['-']	);//partial
	semn= ra(['+','-','*','/']	);//complet
	var t1=r2(1,5);
	var t2=r2(1,5);
	if (semn=="/"){	t1=t2*r2(1,5);	}
	//daca nu stie inca nr negative
		if (semn=="-" & t1<t2){	var temp=t1;t1=t2;t2=temp;	}
	
	var t3;
	// calculare t3
		switch(semn){
			case '+': t3=t1+t2; break;
			case '-': t3=t1-t2; break;
			case '*': t3=t1*t2; break;
			case '/': t3=t1/t2; break;
		}
	
console.log();
console.log("=====================");
//console.log(t1+semn+t2+"="+t3);
	//compune intrebarea eg 3+x=5
	var q="";
		//compune partea cu [t1 s t2] eg 3+x
		var necunoscuta = 	ra([ "t1" , "t2"]);
		var tCunoscut;//valoarea termenului care NU e necunoscuta - e folosita mai jos la [compune raspunsul]
		if(necunoscuta=="t1"){
			tCunoscut=t2;
			q+="X "+semn+" ";
			//daca t2 e cu minus baga-l in paranteze
			if (t2<0)	 { q+="("+t2+")";	}
			else		 { q+=t2;			}
		}
		if(necunoscuta=="t2"){
			tCunoscut=t1;
			q+=t1+" "+semn+" X";
		}

		//pune ...=t3 sau t3=...	
		var pozititeT3 = ra([ "stanga" , "dreapta"]);// t3=... sau ...=t3
		if(pozititeT3=="st"){q=t3+" = "+q;}
		else				{q=q+" = "+t3;}
console.log(q);
	// compune rCorect
		// [x=3] sau [x=5-2]
		var rCorect;
		var tipRaspuns= ( r2(2,2)==1 ? "numar" : "expresie" );
		if (tipRaspuns=="numar"){
			if(necunoscuta=="t1"){rCorect=t1;}
			if(necunoscuta=="t2"){rCorect=t2;}
		}
		if (tipRaspuns=="expresie"){
			if(semn=="+"){
				rCorect=t3+" - "+tCunoscut;
			}
			if(semn=="*"){
				rCorect=t3+" / "+tCunoscut;
			}
			if(semn=="-"){
				if(necunoscuta=="t1"){rCorect=t3+" + "+t2;}
				if(necunoscuta=="t2"){rCorect=t1+" - "+t3;}
			}
			if(semn=="/"){
				if(necunoscuta=="t1"){rCorect=t3+" * "+t2;}
				if(necunoscuta=="t2"){rCorect=t1+" / "+t3;}
			}			
		}
console.log(rCorect);

	rasp=[rCorect];//t3 e rasp corect si e adaugat la index 0 in arrayul [rasp]
	
	//compune variantele de raspuns
	var t21,t22;
	var v;
	for (var i=0;i<3;i++){
		do{	
			
			if(ra(true,false))  {t21=t3;t22=tCunoscut;}
			else				{t21=tCunoscut;t22=t3;}
			t22=ra([-1,1])*t22;
			if(t22<0){t22="("+t22+")";}
			v=	ra([-1,1])*t21 
				+ ra([' + ',' - ',' * ',' / 	'])
				+t22;
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		rasp.push(v);
	}
console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta
	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
		//rCorect:rCorect//pt testing
	}
	

}

function adunariDeMultipli(){
	//alege un inmultitor, 
	// de ex tabla inmultirii cu 16
	//si vom avea ex 16*4=?...
	// si 32+64=?
	// 1-20*1-20
	var x0,x1,x2,t1,t2,t3,t4;
	x0=16;//baza pt inmultiri
	
	x2=r2(1,4);
	x1=r2(1,20-x2);
	t1=x0*x1;
	
	t2=x0*x2;
	
	t3=t1+t2;
	var q=t1+"+"+t2+"=";
	rasp=[t3];//t3 e rasp corect si e adaugat laindex 0 in arrayul [rasp]
	for (var i=0;i<3;i++){
		do{
			var v=	x0*r2(x1+x2-3,x1+x2+3);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		rasp.push(v);
	}
	//console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta

	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
	

}


function inmultiriSiAdunari(){
	//sume de negative
	//ex -2 - -4 = ?
	// -+3 +- +-6  = n1s1n2
	var t1,t2,t3,t4;
	t1=r2(0,10);
	t2=r2(0,10);
	t3=r2(-10,10);
	t4=t1*t2+t3;
	var q;
	if(t2>=0){q=t1+"*"+t2;}
	else	{q=t1+"*"+"("+t2+")";}
	if(t3>=0){q=q+"+"+t3+" = ";}
	else	 {q=q+"+"+"("+t3+")"+" = ";}
	
	console.log(q);
	rasp=[1*t4];
		console.log("rasp="+rasp);
	for (var i=0;i<3;i++){
		do{
			var v=	r2(t4-10,t4+10);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		console.log("t3="+t3,"v="+v);
		rasp.push(v);
	}
	//console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta

	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
	

}

function adunariCuTinem1(){
	//t1="tinem 1"
	//0t1 = fara "tinem 1"
	//2t1 = 2 "tinem 1"
	//
	var t1,t2,t3,x1,x2;
	//gradari:
		//09 +09 0t1 3+7
			// t1=r2(0,9);	
			// t2=r2(0,9-t1);
		//09 +09 1t1 3+8
			// t1=r2(0,9);	
			// t2=r2(10-t1,10);
		//099 +09 0t1 35+4
			// x1=r2(0,9);	
			// t1=r2(1,9)*10+x1;	
			// t2=r2(0,9-x1);		
		//099 +09 1t1 35+8
			// x1=r2(0,9);	
			// t1=r2(1,9)*10+x1;	
			// t2=r2(10-x1,10);		
		//099+099 0t1 			33+44= 77
			// x1=r2(0,9);	
			// x2=r2(1,8);	
			// t1=x2*10+x1;//10-89	
			// t2=r2(1,9-x2)*10+r2(0,9-x1);						
		//099+099 1t1 sub 100   33+48= 81
			// x1=r2(0,9);	
			// x2=r2(1,8);	
			// t1=x2*10+x1;//10-89	
			// t2=r2(1,9-x2)*10+r2(10-x1,9);								
		//099+099 1t1 peste 100 33+84=117
			x1=r2(0,9);	
			x2=r2(1,9);	
			t1=x2*10+x1;//10-99	
			t2=r2(10-x2,9)*10+r2(0,9-x1);		
		// 099+099 2t1 peste 100 33+88=121
			// x1=r2(0,9);	
			// x2=r2(1,9);	
			// t1=x2*10+x1;//10-99	
			// t2=r2(10-x2,9)*10+r2(0,9-x1);		
		// pana aici e super decent, ce urmeaza e cam overkill
		// 100-999+10-99-le-as lasa de-a valma, sunt pritocite in 099+099
			// t1=r2(100,999);
			// t2=r2(10,99);

	t3=1*t1+1*t2;
	var q;
	if(t2>=0){q=t1+"+"+t2+" = ";}
	else	{q=t1+"+"+"("+t2+")"+" = ";}
	console.log(q);
	rasp=[1*t3];
		console.log("rasp="+rasp);
	for (var i=0;i<3;i++){
		do{
			var v=	r2(t3-5,t3+5);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		console.log("t3="+t3,"v="+v);
		rasp.push(v);
	}
	//console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta

	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
}


function adunariSimple(){
	//sume de negative
	//ex -2 - -4 = ?
	// -+3 +- +-6  = n1s1n2
	var t1,t2,t3;
	t1=r2(11,50);
	t2=r2(11,50);
	t3=1*t1+1*t2;
	var q;
	if(t2>=0){q=t1+"+"+t2+" = ";}
	else	{q=t1+"+"+"("+t2+")"+" = ";}
	console.log(q);
	rasp=[1*t3];
		console.log("rasp="+rasp);
	for (var i=0;i<3;i++){
		do{
			var v=	r2(t3-5,t3+5);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		console.log("t3="+t3,"v="+v);
		rasp.push(v);
	}
	//console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta

	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
	

}

function inmultiriSimple(){
	//sume de negative
	//ex -2 - -4 = ?
	// -+3 +- +-6  = n1s1n2
	var t1,t2,t3;
	t1=r2(2,10);
	t2=r2(2,10);
	t3=t1*t2;
	var q;
	if(t2>=0){q=t1+"*"+t2+" = ";}
	else	{q=t1+"*"+"("+t2+")"+" = ";}
	console.log(q);
	rasp=[1*t3];
		console.log("rasp="+rasp);
	for (var i=0;i<3;i++){
		do{
			var v=	t2*r2(t1-3,t1+3);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		console.log("t3="+t3,"v="+v);
		rasp.push(v);
	}
	//console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta

	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
	

}


function inmultiriPeCatOri7(){
	
	//sume de negative
	//ex -2 - -4 = ?
	// -+3 +- +-6  = n1s1n2
	var t1,t2,t3;
	t1=r2(1,20);
	t2=r2(16,16);
	t3=t1*t2;
	var q;
	q=t3+"= ? * "+t2;
	
	console.log(q);
	rasp=[1*t1];
		console.log("rasp="+rasp);
	for (var i=0;i<3;i++){
		do{
			var v=	r2(t1-3,t1+3);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		rasp.push(v);
	}
	console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta

	//returneaza
	
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
	

}

function inmultiriDeNegative(){
	//sume de negative
	//ex -2 - -4 = ?
	// -+3 +- +-6  = n1s1n2
	var t1,t2,t3;
	t1=r2(-10,10);
	t2=r2(-10,10);
	t3=t1*t2;
	var q;
	if(t2>=0){q=t1+"*"+t2+" = ";}
	else	{q=t1+"*"+"("+t2+")"+" = ";}
	console.log(q);
	rasp=[1*t3];
		console.log("rasp="+rasp);
	for (var i=0;i<3;i++){
		do{
			var v=	r2(t3-100,t3+100);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		console.log("t3="+t3,"v="+v);
		rasp.push(v);
	}
	//console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta

	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
	

}

function sumeDeNegative(){
	//sume de negative
	//ex -2 - -4 = ?
	// -+3 +- +-6  = n1s1n2
	var t1,t2,t3;
	t1=r2(-3,3);
	t2=r2(-6,6);
	var x=r1(1);//daca x e 0 atunci semnul e +; daca e 1  atunci -
	var s="";
	//if(x==0){t3=(parseInt(t1)+parseInt(t2));s="+";}
	if(x==0){t3=t1+t2;s="+";}
	else	{t3=t1-t2;s="-";}	

	var q;
	if(t2>0){q=t1+s+t2+" = ";}
	else	{q=t1+s+"("+t2+")"+" = ";}
	console.log(q);
	rasp=[1*t3];
		console.log("rasp="+rasp);
	
	var raspunsuriIspititoare=[];
		var t1a=(t1<0 ? -1*t1 : t1);//valoarea absoluta a lui t1
		var t2a=(t2<0 ? -1*t2 : t2);
		raspunsuriIspititoare.push(t1a+t2a);
		raspunsuriIspititoare.push(-1*t1a-t2a);
		raspunsuriIspititoare.push(-1*t1a+t2a);
		raspunsuriIspititoare.push(t1a-t2a);
		console.log("ri="+raspunsuriIspititoare);
		removeDuplicates(raspunsuriIspititoare);
		console.log("ri="+raspunsuriIspititoare);
	var v;
	for (var i=0;i<3;i++){
		do{
			if( /*(r1(10000)<9999)&*/rasp.length<raspunsuriIspititoare.length){//daca-s egale ins ca au fost deja bagate toate raspIsp
				v=ra(raspunsuriIspititoare);//ia un elem rnd din raspIsp
			}else{	
				v=	r2(t3-3,t3+3);//o valoare aleatoare
			}	
			//console.log(v);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		// console.log("t3="+t3,"v="+v);
		rasp.push(v);
	}
	console.log("rasp="+rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta

	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
	

}



function impartiriFaraRest(){
	//impartiri fara rest
	//ex 14:2=7
	//0-100 : 0-10 = t1/t2 rest t1 - t2*t3
	var t2=r2(1,10);
	var t3=r2(1,10);
	var t1=t2*t3;

	var q=t1+" : "+t2+" = ";//+t3+" rest "+t4;
	// console.log(q);
	rasp=[t3];
	for (var i=0;i<3;i++){
		do{
			var v=	r2(t3-5,t3+5);
		// console.log("t3="+t3,"v="+v);
			//v=	r2((t3>5 ? t3-5 : 0),t3+5);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		rasp.push(v);
	}
	//console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta

	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
}


function impartiriCuRest(){
	//impartiri cu rest
	//ex 15:2=7 rest 1
	//0-100 : 0-10 = t1/t2 rest t1 - t2*t3
	var t1,t2,t3,t4;
	t1=r1(50);
	t2=r2(1,10);
	t3=Math.trunc(t1/t2);//trunc elimina virgula si ce e dupa ea
	t4=t1%t2;
	var q=t1+" : "+t2+" = ";//+t3+" rest "+t4;
	console.log(q);
	rasp=[t3+" rest "+t4];
	var v;
	for (var i=0;i<2;i++){
		do{
			v=	r2((t3>3 ? t3-3 : 0),t3+3)
				+" rest "+r2(0,t4+4);
		}while(rasp.indexOf(v)!=-1)//ca sa nu fie variante duplicat
		console.log("n" +v);
		rasp.push(v);
	}
	//console.log(rasp);
	loc=[];
	asigneazaLOCvariante();
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta
	

	//returneaza
	return{
		q:q,
		rh:randCuVarianteDeRaspuns()
	}
}

function randCuVarianteDeRaspuns(){
	//creeaza raspuns html pt mouseover
	var rh='';
		rh+='<table><tr>';
	for (var i=0;i<rasp.length;i++){
		rh+='<td>';
		rh+='<span ';
		if(loc[i]==0){//e varianta corecta
			rh+=` onmouseover=" this.style.backgroundColor='yellow';  
			raspCorect(); 
			" `;
		}
		else{//e o varianta incorecta
			rh+=' onmouseover="raspGresit();" ';
			rh+=` onmouseenter="this.style.backgroundColor='black';" `;
			rh+=` onmouseout="this.style.backgroundColor='white';" `;
			//rh+=` onmouseenter="console.log('111')" `;
		}
		rh+='">[';
		rh+=rasp[loc[i]];
		rh+=']</span>';//+'&nbsp;&nbsp;' ;
	}
	rh+='</table>';
	return rh;
}

function asigneazaLOCvariante(){
	//alege ordinea in care sa afizeze var de rasp, stiind ca rasp[0] e cea corecta
	var v;
	for (var i=0;i<rasp.length;i++){
		do{
			v=r1(rasp.length-1);
		}while(loc.indexOf(v)!=-1);
		loc.push(v);
	//console.log(loc);
	}
}
	
function raspCorect(){
	// console.log("bravo!");
	logAnswer(1);
	turn++;
	callNewQ();
}

function raspGresit(){
	// console.log("try again!");
	logAnswer(0);
}	

function logAnswer(i){
	//daca la acest turn am un raspuns, nu mai trec nimic
	if(logRaspunsuri.length==turn){return;}
	else {logRaspunsuri.push(i);}
}
  
function r1(i){
	//returns rnd intre 0 si i INCLUSIV;merge si pt i negativ
	return 1*(i*Math.random()).toFixed(0);
}
function r2(i, j){//returns rnd intre i si j INCLUSIV;merge si pt i si j negative
	if(i>j){
		var x=i;i=j;j=x;
	}
	
	return  1*((i+(j-i)*Math.random()).toFixed(0));
}

function ra(arr){
	//returns a random element of the array passed as argument
	var randomIndex=r2(0,arr.length-1);
	return arr[randomIndex];
}


function operatorInvers(o){
	switch(o){
		case "+": return "-"; break;
		case "-": return "+"; break;
		case "*": return "/"; break;
		case "/": return "*"; break;
		default: return "???"; break;//daca nu e un operator cunoscut
	}
}

function removeDuplicates(arr){
	//elimina elementele duplicat dintr-un arr
	//daca ai 1 si "1" raman ambele
	var i2;
	for(var i=0;i<arr.length-1;i++){
		while( (i2=arr.indexOf(arr[i],i+1)) !=-1){
			arr.splice(i2,1);//elimina din arr elem de la index i2
			//console.log(arr);
		}
	}
}
</script>
